This file holds a simple but well-explained documentation of the Dio (Digital Input/Output) peripheral.
The Dio Driver consist of functions that will be discussed in here.

Dio(Digital Input/Output) Drivers is used for initialization and usage support of channels.
_________________________________________________________________________________________________________

Usage:-
- User must only include Dio.h.
- After including, User can use functions illustrated below to preform needed tasks.
- For each function, user is responsible for suplying correct arguments.
- Although all functions have security mechanisms, still some arguments may seem valid but badly alter the wanted behaviour.
- Security mechanisms is checking if given arguments are valid.
- Every function is supplied with a know return value that can be used for debugging. 
- An LCD could be used as a better debugging method.
- Always be aware of Global Pullup Configuration as it could cause trouble with lack of care.
- When writing to or reading from a channel, make sure this channel is set with proper direction.
- For channels without equivalent directions, the system will cancel reading or writing operations.
- Setting Pull-Up configuration could be done either in the direction setting phase, or later in the code. 
_________________________________________________________________________________________________________

This Driver Consist of 6 Topics of Functions:	
1- Direction Set Functions:
	Used to Set the direction of a given (Pin/Port/Upper_Port/Lower_Port) with a digital direction(Input, Output) with an optional
	feature to set as (Input_Pullup).
	
2- Direction Get Functions:
	Used to return the direction of a given Pin/Port.
	
3 - Input Read Functions:
	Used to Read digital values(Logic_Low, Logic_High) from a given (Pin/Port/Upper_Port/Lower_Port) which is pre-directed as an Input.

4- Output Write Functions:
	Used to Write logical values(Logic_Low, Logic_High) to a given (Pin/Port/Upper_Port/Lower_Port)	which is pre-directed as an Output.

5- Output Get_Value Functions:
	Used to Get the pre-written logical_value(Logic_Low, Logic_High) From a given (Pin/Port/Upper_Port/Lower_Port).

6- Pullup Configurations:
	6.1- Used to configure pre-directed as an Input a given (Pin/Port/Upper_Port/Lower_Port) with a Pullup Resistor Configuration.
	6.2- Used to Globaly disable/enable Pullup Resistor Configurations.  
_________________________________________________________________________________________________________

Keywords:
- Dio:	 Digital Input/Output
- Group: An alias of Port, and it indicates the port number.
- Pin:	 An alias of Channel, a bi-directional electerical channel.
- Port:	 A group of consecutive 7 pins numbered from Px0:Px7.
- State: An alias of Direction, the direction of a channel either I/O.
- I/O:	 Input/Output.
- I/P:	 Input.
- O/P:	 Output.
- Upper: The upper half of a port.
- Lower: The lower half of a port.
________________________________________________________________________________________________________

Dependencies:
- Std_Types.h
- Algbit.h
- Atmega32.h
_________________________________________________________________________________________________________

Driver Functionality:
- Set Direction, Read and Write to a Pin.
- Get Direction of a certain Pin.
- Toggle Output value of a cetain Pin.
- Set Direction, Read and Write to an entire Port.			
- Set Direction, Read and Write to one half of a Port.		
- Configure I/P Pins with Pull-Up Resistors.
- Global Pull-Up Disable/Enable.
_________________________________________________________________________________________________________

Direction/State Set Functions:-
	
- uint8_t Dio_Set_Pin(uint8_t Pin, uint8_t State);
	Set Direction of one channel either as Digital I/O.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number.
		 uint8_t state: Desired state as Input/Output.
	
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________	

- uint8_t Dio_Set_Port(uint8_t Group, uint8_t State);
	Set the same Direction for a whole Port either as Digital I/O.
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t state: Desired state either as Input/Output.
	
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
	
- void Dio_Set_Upper(uint8_t Group, uint8_t State);
	Set the same Direction for a upper half of a Port either as Digital I/O.
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t state: Desired state either as Input/Output.
	
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
	
- void Dio_Set_Lower(uint8_t Group, uint8_t State);
	Set the same Direction for a lower half of a Port either as Digital I/O.
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t state: Desired state either as Input/Output.
	
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
________________________________________________________________________________________________________

Direction/State get Functions:-
	
- uint8_t Get_Pin_Status(uint8_t Pin);
	Get Direction of a pin.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number.
	
	Return type:
		0xFF: Input Parameters Error
		0, 1: Direction of a given pin number.
	________________________________________________________________________________
________________________________________________________________________________________________________

O/P Write Functions:-

- uint8_t Dio_Pin_Write(uint8_t Pin, uint8_t Value);
	Write logical states to a given pin.
	
	Parameters:
		 uint8_t pin: 	"Port-Pin Compound" of Port number and Pin number.
		 uint8_t value: logical value to be drvien as an O/P. 
		
	Return type:
		0xFF: Input Parameters Error
		0x00: No error
	________________________________________________________________________________

- uint8_t Dio_Pin_Toggle(uint8_t Pin);
	Toggle logical O/P value of a given pin.
	
	Parameters:
		 uint8_t pin: 	"Port-Pin Compound" of Port number and Pin number.
		
	Return type:
		0xFF: Input Parameters Error
		0x00: No error
	________________________________________________________________________________

- uint8_t Dio_Port_Write(uint8_t Group, uint8_t Value);
	Write one-byte-size number to a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t value: value to be driven as an O/P. 
		
	Return type:
		0xFF: Input Parameters Error
		0x00: No error
	________________________________________________________________________________

- uint8_t Dio_Upper_Write(uint8_t Group, uint8_t Value);
	Write 4-bit-size number to an upper half of a given port. 
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t value: value to be driven as an O/P. 
		
	Return type:
		0xFF: Input Parameters Error
		0x00: No error
	________________________________________________________________________________

- uint8_t Dio_Lower_Write(uint8_t Group, uint8_t Value);
	Write 4-bit-size number to an lower half of a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		 uint8_t value: value to be driven as an O/P. 
		
	Return type:
		0xFF: Input Parameters Error
		0x00: No error
	________________________________________________________________________________
________________________________________________________________________________________________________

O/P Get Functions:-

- uint8_t Get_Pin_Value(uint8_t Pin);
	Get logical driven O/P value of a given pin.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number.
		
	Return type:
		0xFF: Input Parameters Error
		0, 1: No error
	________________________________________________________________________________

- uint8_t Get_Port_Value(uint8_t Group);
	Get one-byte-size value to a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFF: Input Parameters Error
		else: one-byte-size number.
	________________________________________________________________________________

- uint8_t Get_Upper_Value(uint8_t Group);
	Get 4-bit-size value of an upper half of a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFF: Input Parameters Error
		else: 4-bit-size number.
	________________________________________________________________________________

- uint8_t Get_Lower_Value(uint8_t Group);
	Get 4-bit-size value of an lower half of a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFF: Input Parameters Error
		else: 4-bit-size number.
	________________________________________________________________________________
________________________________________________________________________________________________________

O/P Read Functions:-

- uint8_t Dio_Pin_Read(uint8_t Pin);
	Read input value in a given pin.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number..
		
	Return type:
		0xFF: Input Parameters Error
		0, 1: Normal return data
	________________________________________________________________________________

- uint16_t Dio_Port_Read(uint8_t Group);
	Read input value of an entire given port at once.
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFFF: Input Parameters Error
		else: 8-bit-size value.
	________________________________________________________________________________
	
- uint8_t Dio_Upper_Read(uint8_t Group);
	Read input value of an upper half of a given port. 
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFF: Input Parameters Error
		else: 4-bit-size number.
	________________________________________________________________________________
- uint8_t Dio_Lower_Read(uint8_t Group);
	Read input value of an lower half of a given port.
	
	Parameters:
		 uint8_t Group: Port number.
		
	Return type:
		0xFF: Input Parameters Error
		else: 4-bit-size number.
	________________________________________________________________________________
________________________________________________________________________________________________________

Pullup Resistor Configuration:-

- uint8_t Dio_Pullup_Set(uint8_t Pin);
	Configure given Pin with Pullup Resistor.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number..
		
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
		
- uint8_t Dio_Pullup_Reset(uint8_t Pin);
	Deconfigure given Pin with Pullup Resistor.
	
	Parameters:
		 uint8_t pin: "Port-Pin Compound" of Port number and Pin number..
		
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
	
- uint8_t Global_Pullup_Configure(uint8_t State);
	Enable/Disable All Pullup Functionality
	
	Parameters:
		 uint8_t State: Logical State either High or Low
		
	Return type:
		0xFF: Input Parameters Error
		0x00: Indicates no error
	________________________________________________________________________________
________________________________________________________________________________________________________